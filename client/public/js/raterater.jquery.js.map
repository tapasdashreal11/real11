{"version":3,"sources":["raterater.jquery.js"],"names":["$","setValue","id","stars","data","val","change","init","_options","elems","each","$this","this","opts","mode","MODE_INPUT","prop","iId","inputCounter","outer","attr","after","hide","object","starWidth","spaceWidth","dataId","state","css","addClass","html","append","i","numStars","children","first","isStatic","find","bind","touchHandler","mousemove","hiliteStarsHover","mouseleave","mouseLeave","mouseup","rate","initializePositions","parent","width","height","Math","floor","starAspect","eq","rating","parseFloat","whole","partial","hiliteStars","e","target","whole_stars_hover","partial_star_hover","round","undefined","submitFunction","window","calculateStars","x","whole_stars","partial_star","step","stepInt","$layer","offsetX","pageX","offset","left","event","touches","originalEvent","changedTouches","type","simulatedEvent","document","createEvent","initMouseEvent","screenX","screenY","clientX","clientY","dispatchEvent","MODE_CALLBACK","fn","raterater","options","defaults","allowChange","extend","jQuery"],"mappings":"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","file":"raterater.jquery.js","sourcesContent":["/*\n *  Raterater 1.1.1\n *  License: MIT - http://www.opensource.org/licenses/mit-license.php\n *  Author: Bain Mullins - http://bainweb.com\n */\n\n;(function( $ ) {\n    var data = {};\n    var opts = {};\n\n    var MODE_INPUT = 'input';\n    var MODE_CALLBACK = 'callback';\n\n    var object;\n\n    var elems = null;\n    var inputCounter = 0;\n\n    $.fn.raterater = function(options) {\n\n        /* Default options\n         */\n        $.fn.raterater.defaults = {\n            submitFunction: '', // this function will be called when a rating is chosen\n            allowChange: false, // allow the user to change their mind after they have submitted a rating\n            starWidth: 20, // width of the stars in pixels\n            spaceWidth: 5, // spacing between stars in pixels\n            numStars: 5,\n            isStatic: false,\n            mode: MODE_CALLBACK,\n            step: false,\n        };\n\n        opts = $.extend( {}, $.fn.raterater.defaults, options );\n        opts.width = opts.numStars * ( opts.starWidth + opts.spaceWidth ); // total rating div width\n        opts.starAspect = 0.9226; // aspect ratio of the font awesome stars\n\n        /* Validate the step option is between 0 and 1 if present\n         */\n        if(opts.step !== false){\n            opts.step = parseFloat(opts.step);\n            if(opts.step <= 0 || opts.step > 1){\n                throw \"Error: step must be between 0 and 1\";\n            }\n        }\n\n        elems = this;\n\n        /* First we create ze elements\n         */\n        init(opts);\n\n        /* Zen we position ze elements\n         */\n        initializePositions();\n\n        return this;\n    }\n\n    function setValue (id,stars){\n\n        $('.raterater-input[data-id=\"'+ id + '\"]').data('input').val(stars).change();\n    }\n\n    function init(_options) {\n        elems.each( function() {\n            var $this = $( this );\n\n            if(opts.mode == MODE_INPUT && ($this.prop(\"tagName\") == 'INPUT' || $this.prop(\"tagName\") == 'SELECT') ){\n                var iId = 'input-' +(inputCounter++);\n                var outer = $('<div class=\"raterater-input\"></div>').attr('data-id', iId).attr('data-rating',$this.val()).data('input',$this);\n                $this.attr('data-id', iId).attr('data-id', iId).attr('data-rating',$this.val()).data('input',$this).after(outer).hide();\n                object = $this = outer;\n            }\n\n            object = $this;\n\n            $this.data('star-width', _options.starWidth)\n            $this.data('space-width', _options.spaceWidth)\n\n            var id = dataId( $this );\n\n            /* Uh oh... We really need a data-id or bad things happen\n             */\n            if( !id ) {\n                throw \"Error: Each raterater element needs a unique data-id attribute.\";\n            }\n\n            /* This is where we store our important data for each rating box\n             */\n            data[id] = {\n                state: 'inactive', // inactive, hover, or rated\n                stars: null,\n            };\n\n\n\n            /* Make our wrapper relative if it is static so we can position children absolutely\n             */\n            if( $this.css( 'position' ) === 'static' )\n                $this.css( 'position', 'relative' );\n\n            /* Add class raterater-wrapper\n             */\n            $this.addClass('raterater-wrapper');\n\n            /* Clear out anything inside so we can append the relevent children\n             */\n            $this.html( '' );\n\n\n            /* We have 4 div children here as different star layers\n             * Layer 1 contains the dull filled stars as a background\n             * Layer 2 shows the bright filled stars that represent the current user's rating\n             * Layer 3 shows the bright filled stars that represent the item's rating\n             * Layer 4 shows the outline stars and is just for looks\n             * Layer 5 covers the widget and mainly exists to keep event.offsetX from being ruined by child elements\n             */\n            $.each( [ 'bg', 'hover', 'rating', 'outline', 'cover' ], function() {\n                $this.append(' <div class=\"raterater-layer raterater-' + this + '-layer\"></div>' );\n            });\n\n            /* Fill the layers with stars\n             */\n            for( var i = 0; i < opts.numStars; i++ ) {\n                $this.children( '.raterater-bg-layer' ).first()\n                    .append( '<i class=\"fa fa-star\"></i>' );\n                $this.children( '.raterater-outline-layer' ).first()\n                    .append( '<i class=\"fa fa-star-o\"></i>' );\n                $this.children( '.raterater-hover-layer' ).first()\n                    .append( '<i class=\"fa fa-star\"></i>' );\n                $this.children( '.raterater-rating-layer' ).first()\n                    .append( '<i class=\"fa fa-star\"></i>' );\n            }\n\n            /* Register mouse event callbacks\n             */\n            if(!opts.isStatic){\n                $this.find( '.raterater-cover-layer' ).bind('touchmove touchend', touchHandler); //bind touch events\n                $this.find( '.raterater-cover-layer' ).mousemove( hiliteStarsHover );\n                $this.find( '.raterater-cover-layer' ).mouseleave( mouseLeave );\n                $this.find( '.raterater-cover-layer' ).mouseup( rate );\n            }\n\n        });\n    }\n\n    function initializePositions() {\n        elems.each( function() {\n\n            var $this;\n\n            if(opts.mode == MODE_INPUT)\n                $this = $(this).parent().find('.raterater-input[data-id=\"'+dataId(this)+'\"]');\n            else\n                $this = $( this );\n\n            var id = dataId( $this );\n\n            /* Set the width and height of the raterater wrapper and layers\n             */\n            var width = opts.width + 'px';\n            var height = Math.floor( opts.starWidth / opts.starAspect ) + 'px';\n            $this.css( 'width', width )\n                .css( 'height', height );\n            $this.find( '.raterater-layer' ).each(function(){\n                $( this ).css( 'width', width )\n                    .css( 'height', height );\n            });\n\n            /* Absolutely position the stars (necessary for partial stars)\n             */\n            for( var i = 0; i < opts.numStars; i++ ) {\n                $.each( [ 'bg', 'hover', 'rating', 'outline' ], function() {\n                    $this.children( '.raterater-' + this + '-layer' ).first().children( 'i' ).eq( i )\n                        .css( 'left', i * ( opts.starWidth + opts.spaceWidth ) + 'px' )\n                        .css( 'font-size', Math.floor( opts.starWidth / opts.starAspect ) + 'px');\n                });\n            }\n\n            /* show the item's current rating on the raterater-rating-layer\n             */\n            var rating = parseFloat( $this.attr( 'data-rating' ) );\n            var whole = Math.floor( rating );\n            var partial = rating - whole;\n            hiliteStars (\n                $this.find( '.raterater-rating-layer' ).first(),\n                whole,\n                partial\n            );\n        });\n    }\n\n    function rate(e) {\n        var $this = $( e.target ).parent();\n        var id = dataId( $this );\n        var stars = data[id].whole_stars_hover + data[id].partial_star_hover;\n\n        /* Round stars to 2 decimals\n         */\n        stars = Math.round( stars * 100 ) / 100;\n\n        /* Set the state to 'rated' to disable functionality\n         */\n        data[id].state = 'rated';\n        data[id].stars = stars;\n\n        /* Add the 'rated' class to the hover layer for additional styling flexibility\n         */\n        $this.find( '.raterater-hover-layer' ).addClass( 'rated' );\n\n        /* Call the user-defined callback function if it exists\n         */\n\n        if(opts.mode != 'input' && ( (opts.submitFunction !== undefined && typeof opts.submitFunction === 'function') || (window[opts.submitFunction] !== undefined && typeof window[opts.submitFunction] === 'function') ))\n            if ( opts.submitFunction !== undefined && typeof opts.submitFunction === 'function' )\n                opts.submitFunction( id, stars );\n            else\n                window[opts.submitFunction]( id, stars );\n        else\n            if(stars >4.5){\n                setValue(id, 5);\n            }else{\n                setValue(id, stars);\n            }\n            \n\n        /* Revert to the last rating, since we have already rated this item\n         */\n        if( data[id].state === 'rated' ) {\n            var rating = parseFloat( data[id].stars );\n            var whole = Math.floor( rating );\n            var partial = rating - whole;\n            hiliteStars (\n                $this.find( '.raterater-rating-layer' ).first(),\n                whole,\n                partial );\n\n            /* hide the hover layer and show the rating layer\n             */\n            // $( e.target ).parent().children( '.raterater-hover-layer' ).first().css( 'display', 'none' );\n            // $( e.target ).parent().children( '.raterater-rating-layer' ).first().css( 'display','block' );\n            return;\n        }\n\n    }\n\n    /* Calculate the number of stars from the x position of the mouse relative to the cover layer\n     * (This is only compicated because of the spacing between stars)\n     */\n    function calculateStars(x, id, e) {\n        let $this = $( e.target ).parent()\n\n        let starWidth  = $this.data('star-width')\n        let spaceWidth = $this.data('space-width')\n\n        /* Whole star = floor( x / ( star_width + space_width ) )\n         */\n        var whole_stars = Math.floor( x / ( starWidth + spaceWidth ) );\n\n        /* Partial star = max( 1, ( x - whole_stars * ( star_width + space_width ) ) / star_width )\n         */\n        var partial_star = x - whole_stars * ( starWidth + spaceWidth );\n        if( partial_star > starWidth )\n            partial_star = starWidth;\n        partial_star /= starWidth;\n\n        /* Round to the nearest step if a step is provided\n         */\n        if(opts.step !== false){\n            var stepInt = 1 / opts.step\n            partial_star = (Math.round(partial_star * stepInt) / stepInt);\n        }\n\n        /* Store our result in the data object\n         */\n        data[id].whole_stars_hover = whole_stars;\n        data[id].partial_star_hover = partial_star;\n    }\n\n    /* Given a layer object and rating data, highlight the stars\n     */\n    function hiliteStars($layer, whole, partial) {\n        var id = dataId( $layer.parent() );\n\n        /* highlight the 'whole' stars\n         */\n        for( var i = 0; i < whole; i++ ) {\n            $layer.find( 'i' ).eq( i )\n                .css( 'width', opts.starWidth + 'px' );\n        }\n\n        /* highlight the partial star\n         */\n        $layer.find( 'i' ).eq( whole )\n            .css( 'width', opts.starWidth * partial + 'px' );\n\n        /* clear the extra stars\n         */\n        for( var i = whole+1; i < opts.numStars; i++) {\n            $layer.find( 'i' ).eq( i )\n                .css( 'width', '0px' );\n        }\n    }\n\n    /* Highlight the hover layer stars\n     * This is the callback for the mousemove event\n     */\n    function hiliteStarsHover(e) {\n        var id = dataId( $( e.target ).parent() );\n\n        /* Leave it alone, we aren't hovering\n         */\n        // if( data[id].state !== 'hover' ) {\n        //     return;\n        // }\n\n        /* Get the mouse offsetX\n         */\n        var x = e.offsetX;\n\n        /* Firefox requires a pageX hack\n         */\n        if(x === undefined) {\n            x = e.pageX - $( e.target ).offset().left;\n        }\n\n        data[id].stars = calculateStars( x, id , e );\n\n\n        /* Find the layer element\n         */\n        var $layer = $( e.target ).parent().children( '.raterater-hover-layer' ).first();\n\n        /* Call the more generic highlighting function\n         */\n        hiliteStars( $layer, data[id].whole_stars_hover, data[id].partial_star_hover );\n\n        /// mouseEnter(e);\n    }\n\n    /* Active this rating box\n     * This is the callback for the mouseenter event\n     */\n    function mouseEnter(e) {\n        var id = dataId( $( e.target ).parent() );\n\n        /* Leave it alone, we have already rated this item\n         */\n        if( data[id].state === 'rated' && !opts.allowChange ) {\n            return;\n        }\n\n        /* set the state to 'hover'\n         */\n        data[id].state = 'hover';\n\n        /* show the hover layer and hide the rating layer\n         */\n        $( e.target ).parent().children( '.raterater-rating-layer' ).first().css( 'display', 'none' );\n        $( e.target ).parent().children( '.raterater-hover-layer' ).first().css( 'display','block' );\n    }\n\n    /* Deactivate this rating box\n     * This is the callback for the mouseleave event\n     */\n    function mouseLeave(e) {\n        var $this = $( e.target ).parent();\n        var id = dataId( $this );\n\n        //TODO: Review\n        // /* hide the hover layer and show the rating layer\n        //  */\n        // $( e.target ).parent().children( '.raterater-hover-layer' ).first().css( 'display', 'none' );\n        // $( e.target ).parent().children( '.raterater-rating-layer' ).first().css( 'display','block' );\n\n        // /* Revert to the last rating, since we have already rated this item\n        //  */\n        // if( data[id].state === 'rated' ) {\n        //     var rating = parseFloat( data[id].stars );\n        //     var whole = Math.floor( rating );\n        //     var partial = rating - whole;\n        //     hiliteStars (\n        //         $this.find( '.raterater-rating-layer' ).first(),\n        //         whole,\n        //         partial );\n\n        //     return;\n        // }\n\n        // /* set the state to 'inactive'\n        //  */\n        data[id].state = 'inactive';\n    }\n\n    /* Shorthand function to get the data-id of an element\n     */\n    function dataId(e) {\n        return $( e ).attr( 'data-id' );\n    }\n\n    //Touch event handler\n    function touchHandler(event) {\n        var touches = event.originalEvent.changedTouches,\n            first = touches[0],\n            type = \"\";\n        switch (event.type) {\n            case \"touchmove\": type = \"mousemove\"; break;\n            case \"touchend\": type = \"mouseup\"; break;\n            default: return;\n        }\n\n        var simulatedEvent = document.createEvent(\"MouseEvent\");\n        simulatedEvent.initMouseEvent(type, true, true, window, 1,\n            first.screenX, first.screenY,\n            first.clientX, first.clientY, false,\n            false, false, false, 0/*left*/, null);\n\n        first.target.dispatchEvent(simulatedEvent);\n        // event.preventDefault();\n    };\n\n})( jQuery );\n"]}