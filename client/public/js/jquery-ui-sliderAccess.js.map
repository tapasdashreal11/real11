{"version":3,"sources":["jquery-ui-sliderAccess.js"],"names":["$","fn","extend","sliderAccess","options","touchonly","undefined","document","this","each","i","obj","$t","o","where","step","slider","upIcon","downIcon","text","upText","downText","buttonset","buttonsetTag","isRTL","$buttons","children","j","jobj","$jt","button","icons","primary","data","click","e","curr","newval","minval","maxval","slidee","stope","preventDefault","call","value","removeClass","eq","addClass","bOuterWidth","css","marginLeft","marginRight","outerWidth","tOuterWidth","width","jQuery"],"mappings":"AAAA,cAYA,SAAUA,GAENA,EAAEC,GAAGC,QACDC,aAAc,SAASC,GAInB,MAHAA,GAAUA,MACVA,EAAQC,UAAkCC,SAAtBF,EAAQC,WAA0BD,EAAQC,UAE1DD,EAAQC,aAAc,GAAU,cAAgBE,UAI7CP,EAAEQ,MAAMC,KAAK,SAASC,EAAGC,GAC5B,GAAIC,GAAKZ,EAAEQ,MACPK,EAAIb,EAAEE,WACFY,MAAO,QACPC,KAAMH,EAAGI,OAAO,SAAU,QAC1BC,OAAQ,eACRC,SAAU,gBACVC,MAAM,EACNC,OAAQ,IACRC,SAAU,IACVC,WAAW,EACXC,aAAc,OACdC,OAAO,GACRpB,GACHqB,EAAWzB,EAAE,IAAMa,EAAEU,aAAe,gDACRV,EAAEK,SAAW,iBAAmBL,EAAEW,MAAQX,EAAEE,KAAOF,EAAEE,SAAa,KAAOF,EAAEQ,SAAW,+BACtFR,EAAEI,OAAS,iBAAmBJ,EAAEW,MAAQX,EAAEE,QAAYF,EAAEE,MAAQ,KAAOF,EAAEO,OAAS,cACnGP,EAAEU,aAAe,IAEhCE,GAASC,SAAS,UAAUjB,KAAK,SAASkB,EAAGC,GACzC,GAAIC,GAAM7B,EAAEQ,KACZqB,GAAIC,QACIX,KAAMN,EAAEM,KACRY,OACIC,QAASH,EAAII,KAAK,WAGzBC,MAAM,SAASC,GACZ,GAAIpB,GAAOc,EAAII,KAAK,QAChBG,EAAOxB,EAAGI,OAAO,SACjBqB,EAASD,GAAe,EAAPrB,EACjBuB,EAAS1B,EAAGI,OAAO,SAAU,OAC7BuB,EAAS3B,EAAGI,OAAO,SAAU,OAC7BwB,EAAS5B,EAAGI,OAAO,SAAU,UAAY,aACzCyB,EAAQ7B,EAAGI,OAAO,SAAU,SAAW,YAE3CmB,GAAEO,iBAEEL,EAASC,GAAUD,EAASE,IAIhC3B,EAAGI,OAAO,QAASqB,GAEnBG,EAAOG,KAAK/B,EAAI,MACZgC,MAAOP,IAEXI,EAAME,KAAK/B,EAAI,MACXgC,MAAOP,SAMvBzB,EAAGC,EAAEC,OAAOW,GAERZ,EAAES,YACFG,EAASoB,YAAY,mBAAmBA,YAAY,kBAAkBvB,YACtEG,EAASqB,GAAG,GAAGC,SAAS,kBACxBtB,EAASqB,GAAG,GAAGC,SAAS,mBAI5B,IAAIC,GAAcvB,EAASwB,KACvBC,WAA0B,UAAZrC,EAAEC,QAAsBD,EAAEW,OAAuB,WAAZX,EAAEC,OAAsBD,EAAEW,MAAS,GAAK,EAC3F2B,YAA2B,WAAZtC,EAAEC,QAAuBD,EAAEW,OAAuB,UAAZX,EAAEC,OAAqBD,EAAEW,MAAS,GAAK,IAC7F4B,YAAW,GAAQ,EAClBC,EAAczC,EAAGwC,YAAW,EAChCxC,GAAGqC,IAAI,UAAW,gBAAgBK,MAAMD,EAAcL,KAvE/ChD,EAAEQ,UA4EtB+C","file":"jquery-ui-sliderAccess.js","sourcesContent":["/*\n * jQuery UI Slider Access\n * By: Trent Richardson [http://trentrichardson.com]\n * Version 0.3\n * Last Modified: 10/20/2012\n * \n * Copyright 2011 Trent Richardson\n * Dual licensed under the MIT and GPL licenses.\n * http://trentrichardson.com/Impromptu/GPL-LICENSE.txt\n * http://trentrichardson.com/Impromptu/MIT-LICENSE.txt\n * \n */\n(function($) {\n\n    $.fn.extend({\n        sliderAccess: function(options) {\n            options = options || {};\n            options.touchonly = options.touchonly !== undefined ? options.touchonly : true; // by default only show it if touch device\n\n            if (options.touchonly === true && !(\"ontouchend\" in document)) {\n                return $(this);\n            }\n\n            return $(this).each(function(i, obj) {\n                var $t = $(this),\n                    o = $.extend({}, {\n                        where: 'after',\n                        step: $t.slider('option', 'step'),\n                        upIcon: 'ui-icon-plus',\n                        downIcon: 'ui-icon-minus',\n                        text: false,\n                        upText: '+',\n                        downText: '-',\n                        buttonset: true,\n                        buttonsetTag: 'span',\n                        isRTL: false\n                    }, options),\n                    $buttons = $('<' + o.buttonsetTag + ' class=\"ui-slider-access\">' +\n                        '<button data-icon=\"' + o.downIcon + '\" data-step=\"' + (o.isRTL ? o.step : o.step * -1) + '\">' + o.downText + '</button>' +\n                        '<button data-icon=\"' + o.upIcon + '\" data-step=\"' + (o.isRTL ? o.step * -1 : o.step) + '\">' + o.upText + '</button>' +\n                        '</' + o.buttonsetTag + '>');\n\n                $buttons.children('button').each(function(j, jobj) {\n                    var $jt = $(this);\n                    $jt.button({\n                            text: o.text,\n                            icons: {\n                                primary: $jt.data('icon')\n                            }\n                        })\n                        .click(function(e) {\n                            var step = $jt.data('step'),\n                                curr = $t.slider('value'),\n                                newval = curr += step * 1,\n                                minval = $t.slider('option', 'min'),\n                                maxval = $t.slider('option', 'max'),\n                                slidee = $t.slider(\"option\", \"slide\") || function() {},\n                                stope = $t.slider(\"option\", \"stop\") || function() {};\n\n                            e.preventDefault();\n\n                            if (newval < minval || newval > maxval) {\n                                return;\n                            }\n\n                            $t.slider('value', newval);\n\n                            slidee.call($t, null, {\n                                value: newval\n                            });\n                            stope.call($t, null, {\n                                value: newval\n                            });\n                        });\n                });\n\n                // before or after\t\t\t\t\t\n                $t[o.where]($buttons);\n\n                if (o.buttonset) {\n                    $buttons.removeClass('ui-corner-right').removeClass('ui-corner-left').buttonset();\n                    $buttons.eq(0).addClass('ui-corner-left');\n                    $buttons.eq(1).addClass('ui-corner-right');\n                }\n\n                // adjust the width so we don't break the original layout\n                var bOuterWidth = $buttons.css({\n                    marginLeft: ((o.where === 'after' && !o.isRTL) || (o.where === 'before' && o.isRTL) ? 10 : 0),\n                    marginRight: ((o.where === 'before' && !o.isRTL) || (o.where === 'after' && o.isRTL) ? 10 : 0)\n                }).outerWidth(true) + 5;\n                var tOuterWidth = $t.outerWidth(true);\n                $t.css('display', 'inline-block').width(tOuterWidth - bOuterWidth);\n            });\n        }\n    });\n\n})(jQuery);\n"]}